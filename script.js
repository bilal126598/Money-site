const bankIcons = {
  "—Ç–∏–Ω—å": "üè¶üî∏",
  "—Ç–∏–Ω—å–∫": "üè¶üî∏",
  "–æ–∑–æ–Ω": "üè¶üîπ",
  "—Ä–∑–æ–Ω": "üè¶üîπ",
  "–æ–∑": "üè¶üîπ",
  "—è–¥": "üè¶üü£",
  "—è–Ω–¥–µ–∫—Å": "üè¶üü£"
};

const fixedBanks = {
  "–∑–∞–∏—Ä–∞": "üè¶üî∏",
  "–º–∞–∫—Å–∏–º": "üè¶üî∏",
  "—é—Å—É—Ñ": "üè¶üî∏",
  "—Å–∏–¥—Ä–∞—Ç": "üè¶üî∏",
  "–ª–∞—Ä–∏—Å–∞": "üè¶üî∏",
  "—Ä–∞–¥–∂–∞–±": "üè¶üî∏",
  "—Å–∞–±–∏—Ä": "üè¶üî∏",
  "–∏–±—Ä–∞ —Ç": "üè¶üî∏",
  "–∫—É—Ä–±–∞–Ω": "üè¶üî∏",
  "—Ñ–∞–∏–Ω–∞": "üè¶üîπ",
  "–∏–±—Ä–∞": "üè¶üîπ",
  "–≥–∞–¥–∂–∏": "üè¶üü£",
  "–≥–∞–¥–∂–∏–º—É—Ä–∞–¥": "üè¶üü£",
  "–∏—Å–ª–∞–º": "üè¶üü£",
  "–∞–±–¥—É–ª": "üè¶üü£",
  "—à–µ–π—Ö": "üè¶üü£",
  "—à–µ–π—Ö–º—É—Å—Ç–∞—Ñ–∞": "üè¶üü£",
  "–¥–∞–≤–∏–¥": "üè¶üü£",
  "–º—É–≥": "üè¶üü£",
  "–º—É–≥–º–∞": "üè¶üü£",
  "—Å–∞–ª–∏–º–∞—Ç": "üè¶üü£"
};

function parseLine(line) {
  let [nameBank, ...rest] = line.split(/\s+/);
  if (!nameBank) return null;
  let name = nameBank.trim().toLowerCase();
  let bank = "";

  for (let keyword in bankIcons) {
    if (line.toLowerCase().includes(keyword)) {
      bank = bankIcons[keyword];
      break;
    }
  }

  if (fixedBanks[name]) bank = fixedBanks[name];

  let numbers = rest.join(" ")
    .replace(/\([^)]*\)/g, "") // —É–¥–∞–ª–µ–Ω–∏–µ —Å–∫–æ–±–æ–∫ –∏ –∏—Ö —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    .match(/\d+[.,]?\d*t?/gi) || [];

  let sumMap = {};
  let total = 0;

  for (let val of numbers) {
    val = val.replace(",", ".").toLowerCase();
    let isT = val.includes("—Ç");
    let num = parseFloat(val);
    if (!isNaN(num)) {
      let final = isT ? num * 1000 : num * 1000;
      total += final;
      sumMap[final] = (sumMap[final] || 0) + 1;
    }
  }

  return {
    name: name.toUpperCase(),
    bank,
    sumMap,
    total
  };
}

function calculate() {
  let input = document.getElementById("input").value.trim();
  let lines = input.split(/\n+/);
  let people = [];
  let globalTotal = 0;

  for (let line of lines) {
    let parsed = parseLine(line);
    if (parsed && parsed.total > 0) {
      people.push(parsed);
      globalTotal += parsed.total;
    }
  }

  let output = "";
  for (let p of people) {
    output += `\n<b>${p.name}</b> ${p.bank}\n`;
    for (let amount in p.sumMap) {
      output += `${amount}‚ÇΩ √ó ${p.sumMap[amount]}\n`;
    }
    output += `–ò–¢–û–ì–û: ${p.total}‚ÇΩ\n\n`;
  }
  output += `<hr>–û–ë–©–ê–ö: ${globalTotal}‚ÇΩ`;
  document.getElementById("output").innerHTML = output;
}